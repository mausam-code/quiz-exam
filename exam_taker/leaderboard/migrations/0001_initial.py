# Generated by Django 4.2.7 on 2025-07-12 17:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('exams', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Leaderboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField()),
                ('percentage', models.FloatField()),
                ('time_taken', models.IntegerField(help_text='Time taken in seconds')),
                ('rank', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('exam_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leaderboard_entries', to='exams.examsession')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leaderboard_entries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['rank'],
                'indexes': [models.Index(fields=['exam_session', 'rank'], name='leaderboard_exam_se_4746ba_idx'), models.Index(fields=['exam_session', 'score'], name='leaderboard_exam_se_631b08_idx')],
                'unique_together': {('exam_session', 'user')},
            },
        ),
        migrations.CreateModel(
            name='GlobalLeaderboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_exams', models.IntegerField(default=0)),
                ('total_score', models.FloatField(default=0.0)),
                ('average_score', models.FloatField(default=0.0)),
                ('global_rank', models.IntegerField(blank=True, null=True)),
                ('best_score', models.FloatField(default=0.0)),
                ('total_time_spent', models.IntegerField(default=0, help_text='Total time in seconds')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='global_leaderboard', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['global_rank'],
                'indexes': [models.Index(fields=['global_rank'], name='leaderboard_global__6aa3be_idx'), models.Index(fields=['average_score'], name='leaderboard_average_7220c9_idx'), models.Index(fields=['total_score'], name='leaderboard_total_s_9fb448_idx')],
            },
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achievement_type', models.CharField(choices=[('first_place', 'First Place'), ('top_3', 'Top 3'), ('top_10', 'Top 10'), ('perfect_score', 'Perfect Score'), ('speed_demon', 'Speed Demon'), ('consistent', 'Consistent Performer')], max_length=20)),
                ('earned_at', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True)),
                ('exam_session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to='exams.examsession')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-earned_at'],
                'unique_together': {('user', 'achievement_type', 'exam_session')},
            },
        ),
    ]
