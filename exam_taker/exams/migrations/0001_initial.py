# Generated by Django 4.2.7 on 2025-07-12 17:00

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExamSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('duration', models.IntegerField(help_text='Duration in minutes', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(300)])),
                ('is_paid', models.BooleanField(default=False)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('max_participants', models.IntegerField(default=1000, validators=[django.core.validators.MinValueValidator(1)])),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], default='medium', max_length=10)),
                ('is_public', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('total_participants', models.IntegerField(default=0)),
                ('average_score', models.FloatField(default=0.0)),
                ('highest_score', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('allowed_users', models.ManyToManyField(blank=True, related_name='allowed_exams', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_exams', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExamPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_id', models.CharField(max_length=100, unique=True)),
                ('payment_method', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('exam_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exams.examsession')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExamAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('time_taken', models.IntegerField(blank=True, help_text='Time taken in seconds', null=True)),
                ('answers', models.JSONField(default=dict, help_text='User answers in format {question_id: answer}')),
                ('score', models.FloatField(default=0.0)),
                ('percentage', models.FloatField(default=0.0)),
                ('total_marks', models.IntegerField(default=0)),
                ('is_completed', models.BooleanField(default=False)),
                ('is_submitted', models.BooleanField(default=False)),
                ('payment_id', models.CharField(blank=True, max_length=100)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('exam_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_attempts', to='exams.examsession')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('question_type', models.CharField(choices=[('multiple_choice', 'Multiple Choice'), ('true_false', 'True/False'), ('short_answer', 'Short Answer'), ('essay', 'Essay')], default='multiple_choice', max_length=20)),
                ('options', models.JSONField(blank=True, default=list, help_text='List of options for multiple choice questions')),
                ('correct_answer', models.TextField(help_text='Correct answer or correct option index')),
                ('explanation', models.TextField(blank=True, help_text='Explanation for the correct answer')),
                ('marks', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('exam_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='exams.examsession')),
            ],
            options={
                'ordering': ['order', 'created_at'],
                'unique_together': {('exam_session', 'order')},
            },
        ),
        migrations.AddIndex(
            model_name='examsession',
            index=models.Index(fields=['status', 'start_time'], name='exams_exams_status_13246c_idx'),
        ),
        migrations.AddIndex(
            model_name='examsession',
            index=models.Index(fields=['is_paid', 'is_public'], name='exams_exams_is_paid_fd77b7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='exampayment',
            unique_together={('user', 'exam_session')},
        ),
        migrations.AlterUniqueTogether(
            name='examattempt',
            unique_together={('user', 'exam_session')},
        ),
    ]
